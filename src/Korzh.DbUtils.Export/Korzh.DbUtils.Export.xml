<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Korzh.DbUtils.Export</name>
    </assembly>
    <members>
        <member name="T:Korzh.DbUtils.Export.DbExporter">
            <summary>
            Allows you to export the content of some database to a bunch of files of particular format (XML, JSON, etc)
            </summary>
        </member>
        <member name="M:Korzh.DbUtils.Export.DbExporter.#ctor(Korzh.DbUtils.IDbReader,Korzh.DbUtils.IDatasetExporter,Korzh.DbUtils.IDataPacker,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Korzh.DbUtils.Export.DbExporter" /> class.
            </summary>
            <param name="dbReader">A database reader - an object which implements <see cref="T:Korzh.DbUtils.IDbReader" /> interface
            and provide some basic operation for reading the DB content.</param>
            <param name="dataSetExporter">A dataset exporter - allows to save the content of some dataset in a file of a particular format.</param>
            <param name="packer">A packer - packs the files created by dataset exporter to some storage (e.g. to a folder or a ZIP archive).</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="M:Korzh.DbUtils.Export.DbExporter.Export">
            <summary>
            Performs the exporting.
            This method navigates through all tables in a database, 
            exports the content of each of them to the specified data format and then 
            packs the result files with the specified packer.
            </summary>
        </member>
        <member name="M:Korzh.DbUtils.Export.DbExporter.GetPackerStream(System.String)">
            <summary>
            Opens the write stream for packing one dataset (table).
            </summary>
            <param name="datasetName">The name of the dataset.</param>
            <returns>Stream.</returns>
        </member>
        <member name="T:Korzh.DbUtils.Export.JsonDatasetExporter">
            <summary>
            Represents an implmentation of <see cref="T:Korzh.DbUtils.IDatasetExporter" /> which stores the conten of some dataset to JSON format.
            </summary>
            <seealso cref="T:Korzh.DbUtils.IDatasetExporter" />
        </member>
        <member name="M:Korzh.DbUtils.Export.JsonDatasetExporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Korzh.DbUtils.Export.JsonDatasetExporter"/> class.
            </summary>
        </member>
        <member name="M:Korzh.DbUtils.Export.JsonDatasetExporter.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Korzh.DbUtils.Export.JsonDatasetExporter"/> class.
            </summary>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="P:Korzh.DbUtils.Export.JsonDatasetExporter.FileExtension">
            <summary>
            Gets the default file extension for the current exporting format.
            </summary>
            <value>"json"</value>
        </member>
        <member name="M:Korzh.DbUtils.Export.JsonDatasetExporter.ExportDataset(System.Data.IDataReader,System.IO.Stream,Korzh.DbUtils.DatasetInfo)">
            <summary>
            Exports the dataset's content to JSON
            </summary>
            <param name="dataReader">The data reader which reads the dataset's content.</param>
            <param name="outStream">The output stream.</param>
            <param name="dataset">
            An instance of <see cref="T:Korzh.DbUtils.DatasetInfo"/> class which represents basic table information.
            Can be ommitted if you export only one table
            </param>
        </member>
        <member name="M:Korzh.DbUtils.Export.JsonDatasetExporter.WriteSchemaProperties(Newtonsoft.Json.JsonWriter,System.Data.IDataReader)">
            <summary>
            Writes the table schema.
            </summary>
            <param name="writer">A JSON writer.</param>
            <param name="dataReader">A data reader that allows to get some meta-information of the dataset.</param>
        </member>
        <member name="T:Korzh.DbUtils.Export.XmlDatasetExporter">
            <summary>
            Represents an implmentation of <see cref="T:Korzh.DbUtils.IDatasetExporter" /> which stores the conten of some dataset to XML format.
            </summary>
            <seealso cref="T:Korzh.DbUtils.IDatasetExporter" />
        </member>
        <member name="M:Korzh.DbUtils.Export.XmlDatasetExporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Korzh.DbUtils.Export.XmlDatasetExporter"/> class.
            </summary>
        </member>
        <member name="M:Korzh.DbUtils.Export.XmlDatasetExporter.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Korzh.DbUtils.Export.XmlDatasetExporter"/> class.
            </summary>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="P:Korzh.DbUtils.Export.XmlDatasetExporter.FileExtension">
            <summary>
            Gets the default file extension for the current exporting format.
            </summary>
            <value>"xml"</value>
        </member>
        <member name="M:Korzh.DbUtils.Export.XmlDatasetExporter.ExportDataset(System.Data.IDataReader,System.IO.Stream,Korzh.DbUtils.DatasetInfo)">
            <summary>
            Exports the dataset's content to XML
            </summary>
            <param name="dataReader">The data reader which reads the dataset's content.</param>
            <param name="outStream">The output stream.</param>
            <param name="dataset">
            An instance of <see cref="T:Korzh.DbUtils.DatasetInfo"/> class which represents basic table information.
            Can be ommitted if you export only one table
            </param>
        </member>
        <member name="M:Korzh.DbUtils.Export.XmlDatasetExporter.WriteDatasetSchema(System.Xml.XmlTextWriter,System.Data.IDataReader)">
            <summary>
            Writes the table schema.
            </summary>
            <param name="writer">An XML writer.</param>
            <param name="dataReader">A data reader that allows to get some meta-information of the dataset.</param>
        </member>
    </members>
</doc>
